// Code generated by MockGen. DO NOT EDIT.
// Source: resolver.go

// Package nimona is a generated GoMock package.
package nimona

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockResolver is a mock of Resolver interface.
type MockResolver struct {
	ctrl     *gomock.Controller
	recorder *MockResolverMockRecorder
}

// MockResolverMockRecorder is the mock recorder for MockResolver.
type MockResolverMockRecorder struct {
	mock *MockResolver
}

// NewMockResolver creates a new mock instance.
func NewMockResolver(ctrl *gomock.Controller) *MockResolver {
	mock := &MockResolver{ctrl: ctrl}
	mock.recorder = &MockResolverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockResolver) EXPECT() *MockResolverMockRecorder {
	return m.recorder
}

// ResolveIdentityAlias mocks base method.
func (m *MockResolver) ResolveIdentityAlias(arg0 IdentityAlias) (*IdentityInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ResolveIdentityAlias", arg0)
	ret0, _ := ret[0].(*IdentityInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ResolveIdentityAlias indicates an expected call of ResolveIdentityAlias.
func (mr *MockResolverMockRecorder) ResolveIdentityAlias(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ResolveIdentityAlias", reflect.TypeOf((*MockResolver)(nil).ResolveIdentityAlias), arg0)
}
