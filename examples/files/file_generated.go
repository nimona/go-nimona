// Code generated by nimona.io/tools/codegen. DO NOT EDIT.

package main

import (
	object "nimona.io/pkg/object"
)

type (
	File struct {
		Metadata object.Metadata `nimona:"metadata:m,omitempty"`
		Name     string
		Blob     object.Hash
	}
)

func (e *File) Type() string {
	return "nimona.io/File"
}

func (e File) ToObject() *object.Object {
	r := &object.Object{
		Type:     "nimona.io/File",
		Metadata: e.Metadata,
		Data:     object.Map{},
	}
	// else
	// r.Data["name"] = object.String(e.Name)
	r.Data["name"] = object.String(e.Name)
	// else if $member.IsPrimitive
	r.Data["blob"] = object.String(e.Blob)
	return r
}

func (e *File) FromObject(o *object.Object) error {
	e.Metadata = o.Metadata
	if v, ok := o.Data["name"]; ok {
		if t, ok := v.(object.String); ok {
			e.Name = string(t)
		}
	}
	if v, ok := o.Data["blob"]; ok {
		if t, ok := v.(object.String); ok {
			e.Blob = object.Hash(t)
		}
	}
	return nil
}
