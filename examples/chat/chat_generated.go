// Code generated by nimona.io/tools/codegen. DO NOT EDIT.

package main

import (
	object "nimona.io/pkg/object"
)

type (
	ConversationStreamRoot struct {
		Metadata object.Metadata `nimona:"@metadata:m"`
		Nonce    string          `nimona:"nonce:s"`
	}
	ConversationNicknameUpdated struct {
		Metadata object.Metadata `nimona:"@metadata:m"`
		Nickname string          `nimona:"nickname:s"`
	}
	ConversationMessageAdded struct {
		Metadata object.Metadata `nimona:"@metadata:m"`
		Body     string          `nimona:"body:s"`
	}
)

func (e *ConversationStreamRoot) Type() string {
	return "stream:poc.nimona.io/conversation"
}

func (e *ConversationStreamRoot) MarshalObject() (*object.Object, error) {
	o, err := object.Marshal(e)
	if err != nil {
		return nil, err
	}
	o.Type = "stream:poc.nimona.io/conversation"
	return o, nil
}

func (e *ConversationStreamRoot) UnmarshalObject(o *object.Object) error {
	return object.Unmarshal(o, e)
}

func (e *ConversationNicknameUpdated) Type() string {
	return "poc.nimona.io/conversation.NicknameUpdated"
}

func (e *ConversationNicknameUpdated) MarshalObject() (*object.Object, error) {
	o, err := object.Marshal(e)
	if err != nil {
		return nil, err
	}
	o.Type = "poc.nimona.io/conversation.NicknameUpdated"
	return o, nil
}

func (e *ConversationNicknameUpdated) UnmarshalObject(o *object.Object) error {
	return object.Unmarshal(o, e)
}

func (e *ConversationMessageAdded) Type() string {
	return "poc.nimona.io/conversation.MessageAdded"
}

func (e *ConversationMessageAdded) MarshalObject() (*object.Object, error) {
	o, err := object.Marshal(e)
	if err != nil {
		return nil, err
	}
	o.Type = "poc.nimona.io/conversation.MessageAdded"
	return o, nil
}

func (e *ConversationMessageAdded) UnmarshalObject(o *object.Object) error {
	return object.Unmarshal(o, e)
}
