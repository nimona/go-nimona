// Code generated by nimona.io. DO NOT EDIT.

package nimona

import (
	"github.com/vikyd/zero"

	"nimona.io/internal/tilde"
)

var _ = zero.IsZeroVal
var _ = tilde.NewScanner

func (t *MessageWrapper) DocumentMap() *DocumentMap {
	m := tilde.Map{}

	// # t.Type
	//
	// Type: string, Kind: string, TildeKind: String
	// IsSlice: false, IsStruct: false, IsPointer: false
	{
		m.Set("$type", tilde.String(t.Type))
	}

	return NewDocumentMap(m)
}

func (t *MessageWrapper) FromDocumentMap(d *DocumentMap) error {
	*t = MessageWrapper{}

	// # t.Type
	//
	// Type: string, Kind: string, TildeKind: String
	// IsSlice: false, IsStruct: false, IsPointer: false
	{
		if v, err := d.m.Get("$type"); err == nil {
			if v, ok := v.(tilde.String); ok {
				t.Type = string(v)
			}
		}
	}

	return nil
}
