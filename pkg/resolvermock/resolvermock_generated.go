// Code generated by MockGen. DO NOT EDIT.
// Source: resolver.go

// Package resolvermock is a generated GoMock package.
package resolvermock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	context "nimona.io/pkg/context"
	peer "nimona.io/pkg/peer"
	tilde "nimona.io/pkg/tilde"
)

// MockResolver is a mock of Resolver interface.
type MockResolver struct {
	ctrl     *gomock.Controller
	recorder *MockResolverMockRecorder
}

// MockResolverMockRecorder is the mock recorder for MockResolver.
type MockResolverMockRecorder struct {
	mock *MockResolver
}

// NewMockResolver creates a new mock instance.
func NewMockResolver(ctrl *gomock.Controller) *MockResolver {
	mock := &MockResolver{ctrl: ctrl}
	mock.recorder = &MockResolverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockResolver) EXPECT() *MockResolverMockRecorder {
	return m.recorder
}

// LookupByContent mocks base method.
func (m *MockResolver) LookupByContent(ctx context.Context, cid tilde.Digest) ([]*peer.ConnectionInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LookupByContent", ctx, cid)
	ret0, _ := ret[0].([]*peer.ConnectionInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LookupByContent indicates an expected call of LookupByContent.
func (mr *MockResolverMockRecorder) LookupByContent(ctx, cid interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LookupByContent", reflect.TypeOf((*MockResolver)(nil).LookupByContent), ctx, cid)
}

// LookupByDID mocks base method.
func (m *MockResolver) LookupByDID(ctx context.Context, id peer.ID) ([]*peer.ConnectionInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LookupByDID", ctx, id)
	ret0, _ := ret[0].([]*peer.ConnectionInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LookupByDID indicates an expected call of LookupByDID.
func (mr *MockResolverMockRecorder) LookupByDID(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LookupByDID", reflect.TypeOf((*MockResolver)(nil).LookupByDID), ctx, id)
}
