// Code generated by nimona.io/tools/objectify. DO NOT EDIT.

// +build !generate

package handshake

import (
	"encoding/json"

	"nimona.io/pkg/object"
)

const (
	AckType = "/handshake.ack"
)

// ToObject returns a f12n object
func (s Ack) ToObject() object.Object {
	m := map[string]interface{}{
		"@ctx:s": AckType,
	}
	b, _ := json.Marshal(s)
	json.Unmarshal(b, &m)
	return object.Object(m)
}

// FromObject populates the struct from a f12n object
func (s *Ack) FromObject(o object.Object) error {
	b, _ := json.Marshal(map[string]interface{}(o))
	return json.Unmarshal(b, s)
}

// GetType returns the object's type
func (s Ack) GetType() string {
	return AckType
}
