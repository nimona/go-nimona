// Code generated by nimona.io/tools/codegen. DO NOT EDIT.

package network

import (
	crypto "nimona.io/pkg/crypto"
	object "nimona.io/pkg/object"
)

type (
	DataForward struct {
		Metadata   object.Metadata  `nimona:"metadata:m,omitempty"`
		Recipient  crypto.PublicKey `nimona:"recipient:s,omitempty"`
		Ephermeral crypto.PublicKey `nimona:"ephermeral:s,omitempty"`
		Data       []byte           `nimona:"data:d,omitempty"`
	}
)

func (e *DataForward) Type() string {
	return "nimona.io/network.DataForward"
}

func (e DataForward) ToObject() *object.Object {
	r := &object.Object{
		Type:     "nimona.io/network.DataForward",
		Metadata: e.Metadata,
		Data:     map[string]interface{}{},
	}
	r.Data["recipient:s"] = e.Recipient
	r.Data["ephermeral:s"] = e.Ephermeral
	r.Data["data:d"] = e.Data
	return r
}

func (e *DataForward) FromObject(o *object.Object) error {
	return object.Decode(o, e)
}
