// Code generated by nimona.io/tools/codegen. DO NOT EDIT.

package hyperspace

import (
	json "encoding/json"

	crypto "nimona.io/pkg/crypto"
	object "nimona.io/pkg/object"
)

// domain events
type (
	ContentProviderRequested struct {
		BloomFilter []int64           `json:"bloomFilter:ai"`
		Signature   *crypto.Signature `json:"@signature:o"`
	}
	ContentProviderUpdated struct {
		BloomFilter []int64           `json:"bloomFilter:ai"`
		Signature   *crypto.Signature `json:"@signature:o"`
	}
)

func (e *ContentProviderRequested) ContextName() string {
	return "nimona.io/discovery/hyperspace/ContentProvider"
}

func (e *ContentProviderRequested) EventName() string {
	return "Requested"
}

func (e *ContentProviderRequested) GetType() string {
	return "nimona.io/discovery/hyperspace/ContentProvider.Requested"
}

func (e *ContentProviderRequested) ToObject() object.Object {
	m := map[string]interface{}{
		"@ctx:s":    "nimona.io/discovery/hyperspace/ContentProvider.Requested",
		"@domain:s": "nimona.io/discovery/hyperspace/ContentProvider",
		"@event:s":  "Requested",
	}
	b, _ := json.Marshal(e)
	json.Unmarshal(b, &m)
	return object.Object(m)
}

func (e *ContentProviderRequested) FromObject(o object.Object) error {
	b, _ := json.Marshal(map[string]interface{}(o))
	return json.Unmarshal(b, e)
}

func (e *ContentProviderUpdated) ContextName() string {
	return "nimona.io/discovery/hyperspace/ContentProvider"
}

func (e *ContentProviderUpdated) EventName() string {
	return "Updated"
}

func (e *ContentProviderUpdated) GetType() string {
	return "nimona.io/discovery/hyperspace/ContentProvider.Updated"
}

func (e *ContentProviderUpdated) ToObject() object.Object {
	m := map[string]interface{}{
		"@ctx:s":    "nimona.io/discovery/hyperspace/ContentProvider.Updated",
		"@domain:s": "nimona.io/discovery/hyperspace/ContentProvider",
		"@event:s":  "Updated",
	}
	b, _ := json.Marshal(e)
	json.Unmarshal(b, &m)
	return object.Object(m)
}

func (e *ContentProviderUpdated) FromObject(o object.Object) error {
	b, _ := json.Marshal(map[string]interface{}(o))
	return json.Unmarshal(b, e)
}
