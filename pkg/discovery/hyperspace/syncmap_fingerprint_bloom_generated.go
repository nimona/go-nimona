// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package hyperspace

import (
	"sync"

	crypto "nimona.io/pkg/crypto"
)

type (
	// CryptoFingerprintAnnouncedSyncMap -
	CryptoFingerprintAnnouncedSyncMap struct {
		m sync.Map
	}
)

// NewCryptoFingerprintAnnouncedSyncMap constructs a new SyncMap
func NewCryptoFingerprintAnnouncedSyncMap() *CryptoFingerprintAnnouncedSyncMap {
	return &CryptoFingerprintAnnouncedSyncMap{}
}

// Put -
func (m *CryptoFingerprintAnnouncedSyncMap) Put(k crypto.Fingerprint, v *Announced) {
	m.m.Store(k, v)
}

// Get -
func (m *CryptoFingerprintAnnouncedSyncMap) Get(k crypto.Fingerprint) (*Announced, bool) {
	i, ok := m.m.Load(k)
	if !ok {
		return nil, false
	}

	v, ok := i.(*Announced)
	if !ok {
		return nil, false
	}

	return v, true
}

// Delete -
func (m *CryptoFingerprintAnnouncedSyncMap) Delete(k crypto.Fingerprint) {
	m.m.Delete(k)
}

// Range -
func (m *CryptoFingerprintAnnouncedSyncMap) Range(i func(k crypto.Fingerprint, v *Announced) bool) {
	m.m.Range(func(k, v interface{}) bool {
		return i(k.(crypto.Fingerprint), v.(*Announced))
	})
}
