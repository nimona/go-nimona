// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/geoah/genny

package discovery

import (
	"sync"

	"nimona.io/pkg/peer"
)

type (
	// StringPeerPeerSyncMap -
	StringPeerPeerSyncMap struct {
		m sync.Map
	}
)

// NewStringPeerPeerSyncMap constructs a new SyncMap
func NewStringPeerPeerSyncMap() *StringPeerPeerSyncMap {
	return &StringPeerPeerSyncMap{}
}

// Put -
func (m *StringPeerPeerSyncMap) Put(k string, v *peer.Peer) {
	m.m.Store(k, v)
}

// Get -
func (m *StringPeerPeerSyncMap) Get(k string) (*peer.Peer, bool) {
	i, ok := m.m.Load(k)
	if !ok {
		return nil, false
	}

	v, ok := i.(*peer.Peer)
	if !ok {
		return nil, false
	}

	return v, true
}

// Delete -
func (m *StringPeerPeerSyncMap) Delete(k string) {
	m.m.Delete(k)
}

// Range -
func (m *StringPeerPeerSyncMap) Range(i func(k string, v *peer.Peer) bool) {
	m.m.Range(func(k, v interface{}) bool {
		return i(k.(string), v.(*peer.Peer))
	})
}
