// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/geoah/genny

package resolver

import (
	"sync"

	"nimona.io/pkg/chore"
)

type (
	// ValueCIDSyncList -
	ValueCIDSyncList struct {
		m sync.Map
	}
)

// Put -
func (m *ValueCIDSyncList) Put(k chore.CID) {
	m.m.Store(k, true)
}

// Exists -
func (m *ValueCIDSyncList) Exists(k chore.CID) bool {
	_, ok := m.m.Load(k)
	return ok
}

// Delete -
func (m *ValueCIDSyncList) Delete(k chore.CID) {
	m.m.Delete(k)
}

// Range -
func (m *ValueCIDSyncList) Range(i func(k chore.CID) bool) {
	m.m.Range(func(k, v interface{}) bool {
		return i(k.(chore.CID))
	})
}

// List -
func (m *ValueCIDSyncList) List() []chore.CID {
	r := []chore.CID{}
	m.m.Range(func(k, v interface{}) bool {
		r = append(r, k.(chore.CID))
		return true
	})
	return r
}
