// Code generated by nimona.io/tools/codegen. DO NOT EDIT.

package peer

import (
	crypto "nimona.io/pkg/crypto"
	object "nimona.io/pkg/object"
)

type (
	ConnectionInfo struct {
		Metadata      object.Metadata   `nimona:"@metadata:m"`
		Version       int64             `nimona:"version:i"`
		PublicKey     crypto.PublicKey  `nimona:"publicKey:s"`
		Addresses     []string          `nimona:"addresses:as"`
		Relays        []*ConnectionInfo `nimona:"relays:ao"`
		ObjectFormats []string          `nimona:"objectFormats:as"`
	}
)

func (e *ConnectionInfo) Type() string {
	return "nimona.io/peer.ConnectionInfo"
}

func (e *ConnectionInfo) MarshalObject() (*object.Object, error) {
	o, err := object.Marshal(e)
	if err != nil {
		return nil, err
	}
	o.Type = "nimona.io/peer.ConnectionInfo"
	return o, nil
}

func (e *ConnectionInfo) UnmarshalObject(o *object.Object) error {
	return object.Unmarshal(o, e)
}
