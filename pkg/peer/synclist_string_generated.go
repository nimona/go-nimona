// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package peer

import (
	"sync"

	"nimona.io/pkg/object"
)

type (
	// ObjectHashSyncList -
	ObjectHashSyncList struct {
		m sync.Map
	}
)

// NewObjectHashValueTypeSyncMap constructs a new SyncMap
func NewObjectHashValueTypeSyncMap() *ObjectHashSyncList {
	return &ObjectHashSyncList{}
}

// Put -
func (m *ObjectHashSyncList) Put(k *object.Hash) {
	m.m.Store(k, true)
}

// Exists -
func (m *ObjectHashSyncList) Exists(k *object.Hash) bool {
	_, ok := m.m.Load(k)
	if !ok {
		return false
	}

	return true
}

// Delete -
func (m *ObjectHashSyncList) Delete(k *object.Hash) {
	m.m.Delete(k)
}

// Range -
func (m *ObjectHashSyncList) Range(i func(k *object.Hash) bool) {
	m.m.Range(func(k, v interface{}) bool {
		return i(k.(*object.Hash))
	})
}
