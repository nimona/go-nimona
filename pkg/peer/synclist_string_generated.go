// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package peer

import "sync"

type (
	// StringSyncList -
	StringSyncList struct {
		m sync.Map
	}
)

// NewStringValueTypeSyncMap constructs a new SyncMap
func NewStringValueTypeSyncMap() *StringSyncList {
	return &StringSyncList{}
}

// Put -
func (m *StringSyncList) Put(k string) {
	m.m.Store(k, true)
}

// Exists -
func (m *StringSyncList) Exists(k string) bool {
	_, ok := m.m.Load(k)
	if !ok {
		return false
	}

	return true
}

// Delete -
func (m *StringSyncList) Delete(k string) {
	m.m.Delete(k)
}

// Range -
func (m *StringSyncList) Range(i func(k string) bool) {
	m.m.Range(func(k, v interface{}) bool {
		return i(k.(string))
	})
}
