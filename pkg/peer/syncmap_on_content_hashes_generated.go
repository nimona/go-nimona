// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package peer

import "sync"

type (
	// OnContentHashesUpdatedBoolSyncMap -
	OnContentHashesUpdatedBoolSyncMap struct {
		m sync.Map
	}
)

// NewOnContentHashesUpdatedBoolSyncMap constructs a new SyncMap
func NewOnContentHashesUpdatedBoolSyncMap() *OnContentHashesUpdatedBoolSyncMap {
	return &OnContentHashesUpdatedBoolSyncMap{}
}

// Put -
func (m *OnContentHashesUpdatedBoolSyncMap) Put(k OnContentHashesUpdated, v *bool) {
	m.m.Store(k, v)
}

// Get -
func (m *OnContentHashesUpdatedBoolSyncMap) Get(k OnContentHashesUpdated) (*bool, bool) {
	i, ok := m.m.Load(k)
	if !ok {
		return nil, false
	}

	v, ok := i.(*bool)
	if !ok {
		return nil, false
	}

	return v, true
}

// Delete -
func (m *OnContentHashesUpdatedBoolSyncMap) Delete(k OnContentHashesUpdated) {
	m.m.Delete(k)
}

// Range -
func (m *OnContentHashesUpdatedBoolSyncMap) Range(i func(k OnContentHashesUpdated, v *bool) bool) {
	m.m.Range(func(k, v interface{}) bool {
		return i(k.(OnContentHashesUpdated), v.(*bool))
	})
}
